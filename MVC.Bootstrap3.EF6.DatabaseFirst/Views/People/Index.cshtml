@model IEnumerable<MVC.Bootstrap3.EF6.DatabaseFirst.Models.Person>

@{
    ViewBag.Title = "People";
}

<h1>Index of Personal</h1>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>

<table class="table table-striped">
    <tr class="info">
        <th>
            @Html.DisplayNameFor(model => model.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PreferredName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsPermittedToLogon)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmailAddress)
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <div class="text-uppercase"> @Html.DisplayFor(modelItem => item.FullName)</div>
            </td>
            <td>
                @{ 
                    ViewData["class"] = "text-uppercase";//currently broken, may be issue with class vs classes name of file
                }
                @Html.DisplayFor(modelItem => item.PreferredName, "class")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPermittedToLogon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailAddress)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PersonID }, new { @class = "btn btn-primary" })
                @Html.ActionLink("Details", "Details", new { id = item.PersonID }, new { @class = "btn btn-primary" })
                @Html.ActionLink("Delete", "Delete", new { id = item.PersonID }, new { @class = "btn btn-warning" })
            </td>
        </tr>
    }

</table>
